# ------------------------------------------------------------------------------
# Frenglish Translation GitHub Action
#
# Workflow summary
# - PRs - Internal: always translate the diff to the PR base.
#     • Example 1: Open PR => feature_1 → main
#     • Example 2: Open PR => feature_1_fix → feature_1
#
# - PRs - External: Only translate when external PR is merged
#     • Example: merge PR => fork → main (from a contributor fork)
#
# - Default‑branch pushes: translate unless
#     a) author is github‑actions[bot], or
#     b) the push includes a commit with “chore(i18n): update translations”
#     • Example: Hotfix push → main
#
# - Diff logic: compares to fork-point for PRs, or previous commit on main for direct pushes.
# - If changes are found: handles file renames/deletes, runs translation and formatting,
#   then commits and pushes a single update from the bot.
# ------------------------------------------------------------------------------

name: Frenglish Translation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: ['**']

permissions:
  contents: read

jobs:
  translate_and_format:
    if: >-
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.full_name == github.repository
      ) ||
      (
        github.event_name == 'push' &&
        github.ref == format('refs/heads/{0}', github.event.repository.default_branch) &&
        !contains(github.event.head_commit.author.name, 'github-actions[bot]') &&
        !startsWith(github.event.head_commit.message, 'Merge ')
      )
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Detect prior translation commit
        id: detect
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            RANGE="${{ github.event.before }}..${{ github.sha }}"
          else
            BASE="${{ github.event.pull_request.base.ref }}"
            git fetch --depth=1 origin "$BASE":"$BASE"
            RANGE="$(git merge-base $BASE HEAD)..HEAD"
          fi
          if git log --format=%B $RANGE | grep -qF 'chore(i18n): update translations'; then
            echo "skip=true" >>"$GITHUB_OUTPUT"
          else
            echo "skip=false" >>"$GITHUB_OUTPUT"
          fi

      - name: Checkout code
        if: steps.detect.outputs.skip != 'true'
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        if: steps.detect.outputs.skip != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        if: steps.detect.outputs.skip != 'true'
        run: npm install

      - name: Setup Git User
        if: steps.detect.outputs.skip != 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name  "github-actions[bot]"

      - name: Get Language Configuration
        if: steps.detect.outputs.skip != 'true'
        id: get_lang_config
        run: node .github/scripts/fetch-frenglish-configuration.js
        env:
          FRENGLISH_API_KEY: ${{ secrets.FRENGLISH_API_KEY }}
          GITHUB_TOKEN:      ${{ secrets.GITHUB_TOKEN }}

      - name: Handle Renamed and Deleted Source Files
        if: steps.detect.outputs.skip != 'true'
        id: handle_changes
        run: .github/scripts/handle-changes.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run translation script
        if: steps.detect.outputs.skip != 'true'
        env:
          FRENGLISH_API_KEY: ${{ secrets.FRENGLISH_API_KEY }}
          GITHUB_TOKEN:      ${{ secrets.GITHUB_TOKEN }}
        run: node .github/scripts/translate.js

      - name: Stage all changes
        if: steps.detect.outputs.skip != 'true'
        run: git add .

      - name: Commit changes
        if: steps.detect.outputs.skip != 'true'
        id: commit
        run: |
          if git diff --cached --quiet; then
            echo "changes_committed=false" >>"$GITHUB_OUTPUT"
          else
            LANG="${{ steps.get_lang_config.outputs.source_lang }}"
            git commit -m "chore(i18n): update translations [$LANG]"
            echo "changes_committed=true" >>"$GITHUB_OUTPUT"
          fi

      - name: Push changes
        if: steps.detect.outputs.skip != 'true' && steps.commit.outputs.changes_committed == 'true'
        env:
          TARGET_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref_name }}
        run: git push origin HEAD:${TARGET_REF}
